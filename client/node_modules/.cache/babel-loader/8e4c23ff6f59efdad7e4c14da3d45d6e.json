{"ast":null,"code":"var _jsxFileName = \"/Users/macrock/Desktop/CodingDojo/MERNStack/Exam/pet-shelter/client/src/views/Update.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport PetForm from '../components/PetForm';\nimport CancelButton from '../components/Buttons/CancelButton';\nimport HomeButton from '../components/Buttons/HomeButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Update = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [pet, setPet] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    console.log(loaded);\n    axios.get('http://localhost:8000/api/pets/' + id).then(res => {\n      setPet(res.data);\n\n      if (res.data.name === null || res.data.name === \"\" || res.data.name === undefined || res.data.name === \"CastError\") {\n        history.push('/BadURL');\n      }\n\n      setLoaded(true);\n    });\n  }, [id]);\n\n  const updatePet = pet => {\n    // e.preventDefault();\n    axios.put('http://localhost:8000/api/pets/' + id, pet).then(() => history.push('/')).catch(err => {\n      const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n\n      const errorArr = []; // Define a temp error array to push the messages in\n\n      for (const key of Object.keys(errorResponse)) {\n        // Loop through all errors and get the messages\n        errorArr.push(errorResponse[key].message);\n      } // Set Errors\n\n\n      setErrors(errorArr);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomeButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Edit this Pet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), loaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PetForm, {\n        onSubmitProp: updatePet,\n        initialName: pet.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), errors.map((err, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: err\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 41\n    }, this)), /*#__PURE__*/_jsxDEV(CancelButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Update, \"gwCa+AnSzxCzge+fZHiDguwAiPE=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","Link","useHistory","PetForm","CancelButton","HomeButton","Update","props","history","id","pet","setPet","loaded","setLoaded","errors","setErrors","console","log","get","then","res","data","name","undefined","push","updatePet","put","catch","err","errorResponse","response","errorArr","key","Object","keys","message","map","index"],"sources":["/Users/macrock/Desktop/CodingDojo/MERNStack/Exam/pet-shelter/client/src/views/Update.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport PetForm from '../components/PetForm';\nimport CancelButton from '../components/Buttons/CancelButton';\nimport HomeButton from '../components/Buttons/HomeButton';\n    \nconst Update = (props) => {\n    const history = useHistory();\n    const { id } = useParams();\n    const [pet, setPet] = useState();\n    const [loaded, setLoaded] = useState(false);\n\n    const [errors, setErrors] = useState([]); \n    \n    \n    useEffect(() => {\n        console.log(loaded);\n\n        axios.get('http://localhost:8000/api/pets/' + id)\n            .then(res => {\n                setPet(res.data);\n                if (res.data.name === null || res.data.name === \"\" || res.data.name === undefined || res.data.name === \"CastError\") {\n                    history.push('/BadURL');\n                }\n                setLoaded(true);\n            })\n    }, [id]);\n \n    const updatePet = pet => {\n        // e.preventDefault();\n        axios.put('http://localhost:8000/api/pets/' + id, pet)\n            .then(()=>history.push('/'))\n            .catch(err=>{\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n                const errorArr = []; // Define a temp error array to push the messages in\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n                    errorArr.push(errorResponse[key].message)\n                }\n                // Set Errors\n                setErrors(errorArr);\n            })\n    }\n    \n    return (\n        <div>\n            <HomeButton />\n            <hr/>\n            <p>Edit this Pet</p>\n\n            {loaded && (\n                <>\n                    <PetForm onSubmitProp={updatePet} initialName={pet.name} />\n                </>\n            )}                    \n            {errors.map((err, index) => <p key={index}>{err}</p>)}\n\n            <CancelButton />\n            <br/>\n            \n        </div>\n    )\n}\n    \nexport default Update;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}